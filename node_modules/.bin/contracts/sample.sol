pragma solidity >= 0.5.0 < 0.7.0;
contract forensic{
 
struct fingerprint{

	// State variables are fr_id,crime_no....etc sol filename is fingerprint 
	uint fr_id;
	uint crime_no;
	uint fs_id;
	string pattern;
	string ref_point;
	string met_of_coll;
	string add_info;
	string image;
	string date_time;

}

struct footprint
{

	// State variables
	uint ft_id;
	uint crime_no;
	uint fs_id;
	string left_len;
	string left_width;
	string right_len;
	string right_width;
	string add_info;
	string height;
	string gender;
	string date_time;

}

struct hairtest
{

	// State variables
	uint h_id;
	uint crime_no;
	uint fs_id;
	string hair_fiber;
	string dai_medu;
	string dai_hair;
	string which_part;
	string pre_barr_bodies;
	string animal_or_human;
	string gender;

}
struct teeth
{

	// State variables
	uint teeth_id;
	uint crime_no;
	uint fs_id;
	string root_diver;
	string appear;
	string color;
	string edge;
	string teeth_ident;
	string temp_typ_teeth;
	string per_typ_teeth;
	string date_time;

}
struct post_mortem
{

	// State variables
	uint pm_id;
	uint crime_no;
	uint fs_id;
	string body_temp;
	string changes_in_eye;
	string livor_mortis;
	string degradation;
	string time_snc_death_in_hrs;
	string degradation_time;
	string date_time;

}



struct video_audio
{

	// State variables
	uint va_id;
	uint crime_no;
	uint fs_id;
	string audio;
	string video;
	string date_time;

}

struct request_evidences
{
// State variables
	uint request_id;
	uint court_id;
	uint case_num;
	string status;
	string date_time;
	
}



fingerprint []fr;
footprint []ft;
hairtest[]ht;
teeth[]t;
post_mortem[]pm;
video_audio[]va;
request_evidences[]re;

function add_fingerprint(uint fr_id,
	uint crime_no,
	uint fs_id,
	string memory pattern,
	string memory ref_point,
	string memory met_of_coll,
	string memory add_info,
	string memory image,
	string memory date_time)
	public
	{
	fingerprint memory f1=fingerprint(fr_id,crime_no,fs_id,pattern,ref_point,met_of_coll,add_info,image,date_time);
	fr.push(f1);
	}
function add_footprint(uint ft_id,
	uint crime_no,
	uint fs_id,
	string memory left_len,
	string memory left_width,
	string memory right_len,
	string memory right_width,
	string memory add_info,
	string memory height,
	string memory gender,
	string memory date_time) 
	public
	{
	footprint memory f2=footprint(ft_id,crime_no,fs_id,left_len,left_width,right_len,right_width,add_info,height,gender,date_time);
	ft.push(f2);
	}




function add_hairtest(uint h_id,
	uint crime_no,
	uint fs_id,
	string memory hair_fiber,
	string memory dai_medu,
	string memory dai_hair,
	string memory which_part,
	string memory pre_barr_bodies,
	string memory animal_or_human,
	string memory gender) 
	public
	{
	hairtest memory f3=hairtest(h_id,crime_no,fs_id,hair_fiber,dai_medu,dai_hair,which_part,pre_barr_bodies,animal_or_human,gender);
	ht.push(f3);
	}


function add_teeth(uint teeth_id,
	uint crime_no,
	uint fs_id,
	string memory root_diver,
	string memory appear,
	string memory color,
	string memory edge,
	string memory teeth_ident,
	string memory temp_typ_teeth,
	string memory per_typ_teeth,
	string memory date_time

	) 
	public
	{
	teeth memory f4=teeth(teeth_id,crime_no,fs_id,root_diver,appear,color,edge,teeth_ident,temp_typ_teeth,per_typ_teeth,date_time);
	t.push(f4);
	}


function add_post_mortem(uint pm_id,
	uint crime_no,
	uint fs_id,
	string memory body_temp,
	string memory changes_in_eye,
	string memory livor_mortis,
	string memory degradation,
	string memory time_snc_death_in_hrs,
	string memory degradation_time,
	string memory date_time
	) 
	public
	{
	post_mortem memory f5=post_mortem(pm_id,crime_no,fs_id,body_temp,changes_in_eye,livor_mortis,degradation,time_snc_death_in_hrs,degradation_time,date_time);
	pm.push(f5);
	}


function add_video_audio(uint va_id,
	uint crime_no,
	uint fs_id,
	string memory audio,
	string memory video,
	string memory date_time) 
	public
	{
	video_audio memory f6=video_audio(va_id,crime_no,fs_id,audio,video,date_time);
	va.push(f6);
	}



function add_request_evidence(uint request_id,
	uint court_id,
	uint case_num,
	string memory status,
	string memory date_time) 
	public
	{
	request_evidences memory f7=request_evidences(request_id,court_id,case_num,status,date_time);
	re.push(f7);
	}










}
